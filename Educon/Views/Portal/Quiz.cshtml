@model Educon.ViewModels.QuizViewModel
@{
    Layout = null;
}

<head>

    <style>
        .data {
            height: 15vh;
            width: 100%;
        }

        .questioncontainer {
            padding: 0;
        }

        .background {
            background-image: url(http://imageshack.com/a/img924/9477/OXk9f5.jpg);
            background-repeat: repeat;
        }

        .principal {
            position: fixed;
            background-color: white;
            width: 90vw;
            height: 90vh;
            top: 5vh;
            left: 5vw;
            border-radius: 20px;
        }

        .question {
            margin-left: -1px;
            display: flex;
            align-items: center;
            height: 100%;
            background-color: rebeccapurple;
            border-bottom-left-radius: 20px;
            border-top-left-radius: 20px;
            width: 102%;
            padding: 10%;
        }

            .question p {
                margin-top: 25%;
                width: 100%;
                height: 100%;
                font-size: 2em;
                font-family: "Bebas Neue", Arial;
                color: white;
                letter-spacing: 1px;
                line-height: 35px;
                text-align: justify;
            }

        .headerbar {
            height: 20vh;
            width: 50vw;
            background-color: indianred;
            margin-left: 20vw;
            border-bottom-left-radius: 50px;
            border-bottom-right-radius: 50px;
            position: absolute;
            z-index: 9999;
        }

            .headerbar p, .headerbar label {
                font-size: 4.5em;
                font-family: "Bebas Neue", Arial;
                color: white;
                letter-spacing: 1px;
                line-height: 35px;
                text-align: justify;
                margin-top: 45px;
            }

        .question p::first-letter {
            font-size: 2em;
            color: indianred;
            font-weight: bold;
        }

        .auxcontainer {
            margin-top: 30%;
        }

        .answercontainer {
            margin-top: 25%;
        }

        .answer {
            padding: 2%;
            width: 100%;
            font-size: 1.5em;
            font-family: "Bebas Neue", Arial;
            color: white;
            height: 100%;
            line-height: 35px;
        }

            .answer:hover {
                border-radius: 20px;
                cursor: pointer;
                background-color: red;
                transform: scale(1.1);
            }

        #continuebutton {
            height: 15vh;
            width: 15vw;
            margin-left: 72vw;
            position: absolute;
            z-index: 9999;
        }

        #continue {
            height: 100%;
            line-height: 300px;
            text-align: center;
            font-size: 10em;
            font-family: "Bebas Neue", Arial;
            color: white;
            border-bottom-left-radius: 30px;
            border-bottom-right-radius: 30px;
        }

            #continue p {
                font-size: 0.4em;
                line-height: 14vh;
            }

            #continue:hover {
                cursor: pointer;
                background-color: red;
            }

        @@media all and (max-width: 800px) {
            .principal {
                width: 70vw;
                left: 15vw;
            }
        }

        @@media all and (max-width: 600px) {
            .principal {
                width: 90vw;
                left: 5vw;
            }
        }
    </style>

    @Styles.Render("~/css/site")
    @Scripts.Render("~/js/site")
</head>

<body class="background">

    @Html.HiddenFor(m => m.NidQuestion)

    <div class="principal">
        <div class="headerbar">
            <div class="col-md-6"><p id="quiztitle" style="margin-left: 25%;">@Model.Category</p></div>
            <div class="col-md-4"><label id="currentQuestion">1</label><label>/</label><label id="totalQuestions">@Model.QtyQuestions</label></div>
            <div class="col-md-2"><p id="timer">30</p></div>
        </div>

        <div id="continuebutton" style="display: none;">
            <div id="continue" style="background-color: #00cc00;">
                <p>Continue</p>
            </div>
        </div>

        <div class="col-md-5 questioncontainer" style="padding-left: 0; padding-right: 0;">
            <div class="question">
                <div class="auxcontainer">
                    <p id="questiontext">
                        @Model.DesQuestion
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-1" style="background-color: #411e64; height: 100%;"></div>



        <div class="col-md-6" style="padding: 20px;">
            <div class="row answercontainer">


                <div id="one" class="data" style="background-color: #66cccc; border-top-left-radius: 10px; border-top-right-radius: 10px;">
                    <p class="answer" id="1">1. @Model.DesAnswerOne</p>
                </div>

                <div id="two" class="data" style="background-color: #ff3399;">
                    <p class="answer" id="2">2. @Model.DesAnswerTwo</p>
                </div>

                <div id="three" class="data" style="background-color: #ffd11a;">
                    <p class="answer" id="3">3. @Model.DesAnswerThree</p>
                </div>

                <div id="four" class="data" style="background-color: #00cc00; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;">
                    <p class="answer" id="4">4. @Model.DesAnswerFour</p>
                </div>


            </div>
        </div>
    </div>
</body>

<script>
    var continueUrl = "";
    var continueData = null;
    var ingame = true;

    $(document).ready(function () {
        setInterval(changeTimer, 1000);
    });

    function changeTimer() {
        if (!ingame) return;

        var time = parseInt($("#timer").text());
        time--;
        $("#timer").text(time);

        if (time == 0)
        {
            @if (ViewBag.MultiPlayer != null && ViewBag.MultiPlayer)
            {
            <text>
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ValidateAnswer", "Quiz")',
                    data: {
                        ANidUser: @Model.NidUser,
                        ANidQuestion: $("#NidQuestion").val(),
                        ANumAnswer: 0
                    },
                    dataType: "json",
                    success: function (data) {

                        $(".answer").css('background-color', 'lightgrey')
                        $("#" + data.NumCorrectAnswer).css('background-color', 'green')

                        $("#continuebutton").show();

                        // mostra "Você errou!"
                        $("#quiztitle").text("ERROU!");

                        // botao continuar chama next MULTIPLAYER question
                        continueUrl = '/Quiz/NextMultiplayerQuestion?ANamUser1=' + localStorage.NamUser1 + '&ANamUser2=' + localStorage.NamUser2

                        $("#questiontext").text(data.Answer.toString());
                    },
                    error: function (err) { alert(err.responseText); }
                });
                ingame = false;
            </text>
            }
            else
            {
            <text>
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Lose", "Quiz")',
                    data: {
                        AWin: false,
                        AQtyCorQuestions: $("#currentQuestion").text(),
                        AQtyQuestions: $("#totalQuestions").text()
                    },
                    success: function (data) {
                        if (data) {
                            window.location = data.redirectUrl;
                        }
                    },
                    error: function (err) { alert(err.responseText); }
                });
            </text>
            }
        }
    }

    function updateQuestion()
    {
        var question = parseInt($("#currentQuestion").text());
        question++;
        $("#currentQuestion").text(question);
    }

    $('#continue').bind('click', function () {
        if (continueData == null) {
            $.ajax({
                type: "POST",
                url: continueUrl,
                data: {
                    AQtyQuestions: $("#totalQuestions").text()
                },
                success: function (data) {

                    if (data.redirectUrl) {
                        window.location = data.redirectUrl;
                    }
                    else {
                        $('.answer').each(function () {
                            $(this).parent().show();
                        });

                        $("#1").css('background-color', '');
                        $("#2").css('background-color', '');
                        $("#3").css('background-color', '');
                        $("#4").css('background-color', '');

                        $("#continuebutton").hide();
                        $("#correctcontainer").hide();
                        $("#timer").text(30);

                        $("#NidQuestion").val(data.NidQuestion);
                        $("#questiontext").text(data.DesQuestion);
                        $("#1").text("1. " + data.DesAnswerOne);
                        $("#2").text("2. " + data.DesAnswerTwo);
                        $("#3").text("3. " + data.DesAnswerThree);
                        $("#4").text("4. " + data.DesAnswerFour);
                        $("#quiztitle").text(data.Category);
                        updateQuestion();
                        ingame = true;
                    }
                },
                error: function (err) { alert(err.responseText); }
            });
        }
        else
        {
            $.ajax({
                type: "POST",
                url: continueUrl,
                data: {
                    AWin: false,
                    AQtyCorQuestions: $("#currentQuestion").text(),
                    AQtyQuestions: $("#totalQuestions").text()
                },
                success: function (data) {
                    if (data) {
                        window.location = data.redirectUrl;
                    }
                },
                error: function (err) { alert(err.responseText); }
            });
        }
    });

    $('.answer').bind('click', function () {

            if (!ingame) return;

            ingame = false;

            var id = $(this).attr('id');
            $.ajax({
                type: "POST",
                url: '@Url.Action("ValidateAnswer", "Quiz")',
                data: {
                    ANidUser: @Model.NidUser,
                    ANidQuestion: $("#NidQuestion").val(),
                    ANumAnswer: id
                },
                dataType: "json",
                success: function (data) {

                    $(".answer").css('background-color', 'lightgrey')
                    $("#" + id).css('background-color', 'red')
                    $("#" + data.NumCorrectAnswer).css('background-color', 'green')


                    $("#continuebutton").show();
                    //$("#correctcontainer").show();

                    if (data.IsCorrect) {
                        // mostra "Você acertou!"
                        $("#quiztitle").text("ACERTOU!");

                        @if (ViewBag.MultiPlayer != null && ViewBag.MultiPlayer)
                        {
                        <text>
                            // botao continuar chama next MULTIPLAYER question
                            continueUrl = '/Quiz/NextMultiplayerQuestion?ANamUser1=' + localStorage.NamUser1 + '&ANamUser2=' + localStorage.NamUser2
                        </text>
                        }
                        else
                        {
                        <text>
                            // botao continuar chama next question
                            continueUrl = '@Url.Action("NextQuestion", "Quiz")';
                        </text>
                        }

                        continueData = null;
                    }
                    else {
                        // mostra "Você errou!"
                        $("#quiztitle").text("ERROU!");

                        @if (ViewBag.MultiPlayer != null && ViewBag.MultiPlayer)
                        {
                        <text>
                            // botao continuar chama next MULTIPLAYER question
                            continueUrl = '/Quiz/NextMultiplayerQuestion?ANamUser1=' + localStorage.NamUser1 + '&ANamUser2=' + localStorage.NamUser2
                        </text>
                        }
                        else {
                        <text>
                            // botao continuar chama endgame
                            continueUrl = '@Url.Action("EndGame", "Quiz")';
                            continueData = false;
                        </text>
                        }
                    }

                    $("#questiontext").text(data.Answer.toString());
                },
                error: function (err) { alert(err.responseText); }
            });
    })

</script>